# In-vivo 2 compartment model with both micro and macro constants
#
# Goal: This model introduces new hires to the structure and
# syntax of reaction models to be run on the QSP notebook.
#
# Features: This model will simulate a drug in-vivo with: 
#   - 3D compartment
#   - Monospecific antibody ("Ab1")
#   - Receptor ("R1")
#
#

%% ReactionModel@2

initialization = steady_state(time_scale = 86400:s)

time_unit = s

default_state_unit = nmol

% components

######################################################################################
# Parameters

# Parameters defining initial conditions

# Parameters defining rates

# Parameters for dosing drug


######################################################################################
# Assignments
#
# The syntax of a rule is:
# rule_name: unit = numerical expression

# Conversion factors (those with just values could have been defined as parameters)
mL_per_L:(mL/L)               = 1e3:(mL/L)
mg_per_g:(mg/g)               = 1e3:(mg/g)
ug_per_g:(ug/g)               = 1e6:(ug/g)
nmol_per_mol:(nmol/mol)       = 1e9:(nmol/mol)
SECONDS_PER_MINUTE:(s/min)    = 60:(s/min)
SECONDS_PER_HOUR:(s/hr)       = SECONDS_PER_MINUTE * 60:(min/hr)
SECONDS_PER_DAY:(s/d)         = SECONDS_PER_HOUR * 24:(hr/d)
N_AV:(1/mol)                  = 6.022e23:(1/mol)

# Note that when annotating units, the unit ":" operator has operator precedence over 
# everything. For example, 1/24:hr would be the same as 1/(24:hr) rather than (1/24):hr.


# Defining initial state values


######################################################################################
# Routes
# The syntax of a route is:
# name: amount_unit = schedule; state1 += amt, state2 += amt * multiplier ...
#
# Any routes listed here will automatically be applied when running a simulation. If you have multiple routes that
# you plan to swap between, you should set them to an empty schedule ("null") to ensure you don't have multiple routes
# applied at once or have to remember to turn them off before simulation.
# To turn on a dose route, you should give the route a non-empty schedule when defining a model reference.

# This takes an nmol amount @ time zero and applies it to the free drug or subcutaneous drug as a 1-1 dose. 
#


######################################################################################
# Compartments

# The syntax of a compartment is:
# name~dimension = size


IV_mpk: (mg/kg) = @();  Ab1_00_central += amt * (nmol_per_mol * BW) / (mg_per_g * mw)

######################################################################################
# States
# The syntax of a state is:
# name@compartment: unit *= initial_value


######################################################################################
# Reactions
#
#Synthesis and degradation reactions

# Drug degradation reactions

# Drug Binding

# Drug Transport


######################################################################################
# Outputs of the model are just assignments, but it makes sense to define them at
# the end of the model. Best practice is to assign units to outputs to make sure 
# units are as expected.

# Defining model readouts 

# Functions
# There are several functions that can be used for outputs, which are listed here.
# List of functions
# exp(x) - returns e^x
# log(x) - returns ln(x)
# log2(x) - returns log base 2 of x
# log10(x) - returns log base 10 of x
# sqrt(x) - returns square root of x
# pow(x, y) - returns x^y 
# floor(x) - returns x rounded down to the nearest whole number
# ceil(x) - returns x rounded up to the nearest whole number
# sin(x)
# cos(x)
# tan(x)
# mean(x, start time, stop time)
# max(x, start time, stop time)
# min(x, start time, stop time)